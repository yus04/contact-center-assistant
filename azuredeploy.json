{  
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",  
    "contentVersion": "1.0.0.0",  
    "parameters": {  
        "cognitiveServicesAccountName": {  
            "type": "string",  
            "metadata": {  
                "description": "The name of the Cognitive Services account."  
            }  
        },  
        "cognitiveServicesLocation": {  
            "type": "string",  
            "defaultValue": "eastus2",  
            "metadata": {  
                "description": "The location of the Cognitive Services account."  
            }  
        },  
        "cognitiveServicesSkuName": {  
            "type": "string",  
            "defaultValue": "S0",  
            "metadata": {  
                "description": "The SKU name of the Cognitive Services account."  
            }  
        },  
        "keyVaultName": {  
            "type": "string",  
            "metadata": {  
                "description": "The name of the Key Vault."  
            }  
        },  
        "keyVaultLocation": {  
            "type": "string",  
            "defaultValue": "eastus2",  
            "metadata": {  
                "description": "The location of the Key Vault."  
            }  
        },  
        "tenantId": {  
            "type": "string",  
            "metadata": {  
                "description": "The tenant ID for the Key Vault."  
            }  
        },  
        "keyVaultAccessPolicies": {  
            "type": "array",  
            "metadata": {  
                "description": "The access policies for the Key Vault."  
            }  
        },  
        "storageAccountName": {  
            "type": "string",  
            "metadata": {  
                "description": "The name of the Storage Account."  
            }  
        },  
        "storageAccountLocation": {  
            "type": "string",  
            "defaultValue": "eastus2",  
            "metadata": {  
                "description": "The location of the Storage Account."  
            }  
        },  
        "storageAccountSkuName": {  
            "type": "string",  
            "defaultValue": "Standard_LRS",  
            "metadata": {  
                "description": "The SKU name of the Storage Account."  
            }  
        },
        "workspaceLocation": {  
            "type": "string",  
            "defaultValue": "eastus2",  
            "metadata": {  
                "description": "The location of the Machine Learning Workspace."  
            }  
        },  
        "workspaceSkuName": {  
            "type": "string",  
            "defaultValue": "Basic",  
            "metadata": {  
                "description": "The SKU name of the Machine Learning Workspace."  
            }  
        },  
        "workspaceKind": {  
            "type": "string",  
            "defaultValue": "Project",  
            "metadata": {  
                "description": "The kind of the Machine Learning Workspace."  
            }  
        },  
        "storageAccountResourceId": {  
            "type": "string",  
            "metadata": {  
                "description": "The resource ID of the Storage Account."  
            }  
        },  
        "keyVaultResourceId": {  
            "type": "string",  
            "metadata": {  
                "description": "The resource ID of the Key Vault."  
            }  
        },
        "gptModelVersion": {  
            "type": "string",  
            "defaultValue": "2024-05-13",  
            "metadata": {  
                "description": "The version of the GPT model."  
            }  
        },  
        "whisperModelVersion": {  
            "type": "string",  
            "defaultValue": "001",  
            "metadata": {  
                "description": "The version of the Whisper model."  
            }  
        },  
        "keyVaultSecrets": {  
            "type": "array",  
            "metadata": {  
                "description": "The list of secrets to be created in the Key Vault."  
            }  
        },
        "workspaceName": {  
            "type": "string",  
            "metadata": {  
                "description": "The name of the Machine Learning Workspace."  
            }  
        },  
        "containerNames": {  
            "type": "array",  
            "metadata": {  
                "description": "The list of container names to create in the Blob service."  
            }  
        },  
        "fileShareNames": {  
            "type": "array",  
            "metadata": {  
                "description": "The list of file share names to create in the File service."  
            }  
        },  
        "datastores": {  
            "type": "array",  
            "metadata": {  
                "description": "The list of datastores to create in the Machine Learning Workspace."  
            }  
        },  
        "connections": {  
            "type": "array",  
            "metadata": {  
                "description": "The list of connections to create in the Machine Learning Workspace."  
            }  
        }
    },  
    "resources": [  
        {  
            "type": "Microsoft.CognitiveServices/accounts",  
            "apiVersion": "2024-04-01-preview",  
            "name": "[parameters('cognitiveServicesAccountName')]",  
            "location": "[parameters('cognitiveServicesLocation')]",  
            "sku": {  
                "name": "[parameters('cognitiveServicesSkuName')]"  
            },  
            "kind": "AIServices",  
            "properties": {  
                "customSubDomainName": "[parameters('cognitiveServicesAccountName')]",  
                "publicNetworkAccess": "Enabled"  
            }  
        },  
        {  
            "type": "Microsoft.KeyVault/vaults",  
            "apiVersion": "2023-07-01",  
            "name": "[parameters('keyVaultName')]",  
            "location": "[parameters('keyVaultLocation')]",  
            "properties": {  
                "sku": {  
                    "family": "A",  
                    "name": "standard"  
                },  
                "tenantId": "[parameters('tenantId')]",  
                "accessPolicies": "[parameters('keyVaultAccessPolicies')]",  
                "enabledForDeployment": false,  
                "enableSoftDelete": true,  
                "publicNetworkAccess": "Enabled"  
            }  
        },  
        {  
            "type": "Microsoft.Storage/storageAccounts",  
            "apiVersion": "2023-05-01",  
            "name": "[parameters('storageAccountName')]",  
            "location": "[parameters('storageAccountLocation')]",  
            "sku": {  
                "name": "[parameters('storageAccountSkuName')]",  
                "tier": "Standard"  
            },  
            "kind": "StorageV2",  
            "properties": {  
                "allowCrossTenantReplication": false,  
                "minimumTlsVersion": "TLS1_2",  
                "allowBlobPublicAccess": false,  
                "allowSharedKeyAccess": true,  
                "isHnsEnabled": false,  
                "networkAcls": {  
                    "bypass": "AzureServices",  
                    "virtualNetworkRules": [],  
                    "ipRules": [],  
                    "defaultAction": "Allow"  
                },  
                "supportsHttpsTrafficOnly": true,  
                "encryption": {  
                    "services": {  
                        "file": {  
                            "keyType": "Account",  
                            "enabled": true  
                        },  
                        "blob": {  
                            "keyType": "Account",  
                            "enabled": true  
                        }  
                    },  
                    "keySource": "Microsoft.Storage"  
                },  
                "accessTier": "Hot"  
            }  
        },
        {  
            "type": "Microsoft.MachineLearningServices/workspaces",  
            "apiVersion": "2024-04-01",  
            "name": "[parameters('workspaceName')]",  
            "location": "[parameters('workspaceLocation')]",  
            "sku": {  
                "name": "[parameters('workspaceSkuName')]",  
                "tier": "[parameters('workspaceSkuName')]"  
            },  
            "kind": "[parameters('workspaceKind')]",  
            "identity": {  
                "type": "SystemAssigned"  
            },  
            "properties": {  
                "friendlyName": "[parameters('workspaceName')]",  
                "storageAccount": "[parameters('storageAccountResourceId')]",  
                "keyVault": "[parameters('keyVaultResourceId')]",  
                "hbiWorkspace": false,  
                "managedNetwork": {  
                    "isolationMode": "Disabled"  
                },  
                "v1LegacyMode": false,  
                "publicNetworkAccess": "Enabled",  
                "discoveryUrl": "https://eastus2.api.azureml.ms/discovery",  
                "enableDataIsolation": true  
            }  
        },  
        {  
            "type": "Microsoft.CognitiveServices/accounts/deployments",  
            "apiVersion": "2024-04-01-preview",  
            "name": "[concat(parameters('cognitiveServicesAccountName'), '/gpt-4o-deploy')]",  
            "dependsOn": [  
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesAccountName'))]"  
            ],  
            "sku": {  
                "name": "GlobalStandard",  
                "capacity": 30  
            },  
            "properties": {  
                "model": {  
                    "format": "OpenAI",  
                    "name": "gpt-4o",  
                    "version": "[parameters('gptModelVersion')]"  
                },  
                "versionUpgradeOption": "OnceCurrentVersionExpired",  
                "currentCapacity": 30,  
                "raiPolicyName": "Microsoft.DefaultV2"  
            }  
        },  
        {  
            "type": "Microsoft.CognitiveServices/accounts/deployments",  
            "apiVersion": "2024-04-01-preview",  
            "name": "[concat(parameters('cognitiveServicesAccountName'), '/whisper-deploy')]",  
            "dependsOn": [  
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesAccountName'))]"  
            ],  
            "sku": {  
                "name": "Standard",  
                "capacity": 3  
            },  
            "properties": {  
                "model": {  
                    "format": "OpenAI",  
                    "name": "whisper",  
                    "version": "[parameters('whisperModelVersion')]"  
                },  
                "versionUpgradeOption": "OnceCurrentVersionExpired",  
                "currentCapacity": 3,  
                "raiPolicyName": "Microsoft.DefaultV2"  
            }  
        },  
        {  
            "type": "Microsoft.KeyVault/vaults/secrets",  
            "apiVersion": "2023-07-01",  
            "name": "[concat(parameters('keyVaultResourceId'), '/', parameters('keyVaultSecrets')[copyIndex()].name)]",  
            "location": "[resourceGroup().location]",  
            "dependsOn": [  
                "[parameters('keyVaultResourceId')]"  
            ],  
            "properties": {  
                "value": "[parameters('keyVaultSecrets')[copyIndex()].value]",  
                "contentType": "[parameters('keyVaultSecrets')[copyIndex()].contentType]",  
                "attributes": {  
                    "enabled": true,  
                    "exp": "[parameters('keyVaultSecrets')[copyIndex()].exp]"  
                }  
            },  
            "copy": {  
                "name": "keyVaultSecretsCopy",  
                "count": "[length(parameters('keyVaultSecrets'))]"  
            }  
        },
        {  
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",  
            "apiVersion": "2023-05-01",  
            "name": "[concat(parameters('storageAccountName'), '/default/', parameters('containerNames')[copyIndex()])]",  
            "dependsOn": [  
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"  
            ],  
            "properties": {  
                "immutableStorageWithVersioning": {  
                    "enabled": false  
                },  
                "defaultEncryptionScope": "$account-encryption-key",  
                "denyEncryptionScopeOverride": false,  
                "publicAccess": "None"  
            },  
            "copy": {  
                "name": "containerCopy",  
                "count": "[length(parameters('containerNames'))]"  
            }  
        },  
        {  
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",  
            "apiVersion": "2023-05-01",  
            "name": "[concat(parameters('storageAccountName'), '/default/', parameters('fileShareNames')[copyIndex()])]",  
            "dependsOn": [  
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"  
            ],  
            "properties": {  
                "accessTier": "TransactionOptimized",  
                "shareQuota": 102400,  
                "enabledProtocols": "SMB"  
            },  
            "copy": {  
                "name": "fileShareCopy",  
                "count": "[length(parameters('fileShareNames'))]"  
            }  
        },  
        {  
            "type": "Microsoft.MachineLearningServices/workspaces/datastores",  
            "apiVersion": "2024-04-01",  
            "name": "[concat(parameters('workspaceName'), '/', parameters('datastores')[copyIndex()].name)]",  
            "dependsOn": [  
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]"  
            ],  
            "properties": {  
                "credentials": {  
                    "credentialsType": "[parameters('datastores')[copyIndex()].credentialsType]",  
                    "secrets": {  
                        "secretsType": "[parameters('datastores')[copyIndex()].secretsType]"  
                    }  
                },  
                "datastoreType": "[parameters('datastores')[copyIndex()].datastoreType]",  
                "accountName": "[parameters('datastores')[copyIndex()].accountName]",  
                "containerName": "[parameters('datastores')[copyIndex()].containerName]",  
                "endpoint": "[parameters('datastores')[copyIndex()].endpoint]",  
                "protocol": "https",  
                "serviceDataAccessAuthIdentity": "[parameters('datastores')[copyIndex()].serviceDataAccessAuthIdentity]"  
            },  
            "copy": {  
                "name": "datastoreCopy",  
                "count": "[length(parameters('datastores'))]"  
            }  
        },  
        {  
            "type": "Microsoft.MachineLearningServices/workspaces/connections",  
            "apiVersion": "2024-04-01",  
            "name": "[concat(parameters('workspaceName'), '/', parameters('connections')[copyIndex()].name)]",  
            "dependsOn": [  
                "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]",  
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('connections')[copyIndex()].cognitiveServicesAccountName'))]"  
            ],  
            "properties": {  
                "authType": "ApiKey",  
                "category": "[parameters('connections')[copyIndex()].category]",  
                "target": "[parameters('connections')[copyIndex()].target]",  
                "isSharedToAll": true,  
                "sharedUserList": [],  
                "metadata": {  
                    "ApiType": "Azure",  
                    "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('connections')[copyIndex()].cognitiveServicesAccountName)]",  
                    "ApiVersion": "2023-07-01-preview",  
                    "DeploymentApiVersion": "2023-10-01-preview"  
                }  
            },  
            "copy": {  
                "name": "connectionCopy",  
                "count": "[length(parameters('connections'))]"  
            }  
        }  
    ],  
    "outputs": {  
        "cognitiveServicesAccountId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('cognitiveServicesAccountName'))]"  
        },  
        "keyVaultId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"  
        },  
        "storageAccountId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"  
        },
        "workspaceId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', parameters('workspaceName'))]"  
        },  
        "gptDeploymentId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.CognitiveServices/accounts/deployments', concat(parameters('cognitiveServicesAccountName'), '/gpt-4o-deploy'))]"  
        },  
        "whisperDeploymentId": {  
            "type": "string",  
            "value": "[resourceId('Microsoft.CognitiveServices/accounts/deployments', concat(parameters('cognitiveServicesAccountName'), '/whisper-deploy'))]"  
        },  
        "keyVaultSecretIds": {  
            "type": "array",  
            "value": "[array(parameters('keyVaultSecrets')[*].name)]"  
        },
        "containerIds": {  
            "type": "array",  
            "value": "[array(parameters('containerNames')[*])]"  
        },  
        "fileShareIds": {  
            "type": "array",  
            "value": "[array(parameters('fileShareNames')[*])]"  
        },  
        "datastoreIds": {  
            "type": "array",  
            "value": "[array(parameters('datastores')[*].name)]"  
        },  
        "connectionIds": {  
            "type": "array",  
            "value": "[array(parameters('connections')[*].name)]"  
        }  
    }  
}  
